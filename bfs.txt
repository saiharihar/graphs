#include<iostream>
#include<vector>
#include<list>
#include<queue>
using namespace std;
void bfs(int s,vector<vector<int>>&adj,vector<bool>&visited,int n){
    queue<int>q;
    q.push(s);
    visited[s]=true;
    while(!q.empty()){
        int curr=q.front();
        q.pop();
        cout<<curr<<",";
        for(int i=0;i<adj[curr].size();i++){
            if(!visited[adj[curr][i]]){
                q.push(adj[curr][i]);
                visited[adj[curr][i]]=true;
            }
        }
    }
}

int main(){
    int n,e;
    cout<<"vertices,edges"<<endl;
    cin>>n>>e;
    vector<vector<int>>adj(n);
    cout<<"input for edges"<<endl;
    for(int i=0;i<e;i++){
        int u,v;
        cin>>u>>v;
        for(int i=0;i<e;i++){
            adj[u].push_back(v);
        }
    }
    vector<bool>visited(n,false);
    cout<<"bfs of given graph is"<<endl;
    bfs(0,adj,visited,n);
}