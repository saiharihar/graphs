#include<bits/stdc++.h>
using namespace std;
int v,e;
unordered_map<int,vector<int>>adj,rev;

void dfs1(int k,vector<bool>&vis,stack<int>&s){
    vis[k]=true;
    for(int i:adj[k]){
        if(!vis[i]){
            dfs1(i,vis,s);
        }
    }
    s.push(k);
}

void reverse(){
    for(int i=0;i<v;i++){
        for(int j:adj[i]){
            rev[j].push_back(i);
        }
    }
}

void dfs2(int curr,vector<bool>&vis){
    vis[curr]=true;
    cout<<curr<<" ";
    for(int j:rev[curr]){
        if(!vis[j]){
            dfs2(j,vis);
        }
    }
}

void scc(){
    stack<int>s;
    vector<bool>vis(v,false);
    for(int i=0;i<v;i++){
        if(!vis[i]){
            dfs1(i,vis,s);
        }
    }
    reverse();
    for(int i=0;i<v;i++){
        vis[i]=false;
    }
    while(!s.empty()){
        int curr=s.top();
        s.pop();
        if(vis[curr]==false){
            dfs2(curr,vis);
            cout<<endl;
        }
    }
}

int main(){
    cin>>v>>e;
    for(int i=0;i<e;i++){
        int u,v;
        cin>>u>>v;
        adj[u].push_back(v);
    }
    scc();
}